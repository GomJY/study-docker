# 도커와 기존의 가상화 기술과의 차이를 통한 컨테이너 이해

## 가상화 역사

- 가상화 나오기전:
  - 한대의 서버의 하나의 용도로만 사용하고, 남는 서버는 그대로 방치
- 하이버 바이저기반의 가상화 출현
  - 논리적으로 공간을 분할하여 VM이라는 독립적인 가상환경의 서버 이용
  - 기존의 하나의 서버를 하나의 용도로 사용하는 것에서 하나의 서버를 여러 용도로 사용 가능
  - 호스트 시스템에서 다수의 게스트 OS를 구동 할수 있게 하는 소프트웨어, 하드웨어를 가상하 하면서 하드웨어와 각각의 VM을 모니터링하는 중간 관리자가 있다.

## 하이버이저 
 
 - 네이티브 하이퍼 바이저
    - 하이퍼 바이저가 하드웨어를 직접 제어 하여 자원을 효율적으로 사용
    - OS가 없어 오버헤드가 적다.
    - 여러 하드웨어 드라이버 세팅을 필요로하여 번거롭다.
 
 - 호스트 하이퍼 바이저
    - 호스트 OS에서 실행 된다.
    - 하드웨어 자원을 VM 내부의 게스트 OS에 예뮬레이터 하는 방식으로 오버헤드가 크다.
    - 게스트 OS에 제약이 없고, 구현이 쉽다.
    - 일반적으로 많이 이용된다.
    - ex) VMware

## 도커와 하이퍼 바이전 기반의 VM 차이

|정의|도커|VM|
|---|---|---|
|서버단위|컨테이터|VM|
|GuestOS 필요|필요에 따라서|필수|
|커널 공유|O|X|
|overHead|낮다|높다
|재사용성|가능|불가능|


<B>overHead</B>
- 어떤 작업을 처리하기 위해 간접적으로 들어가는 처리시간, 메모리 등의 자원

## docker에서 사용되는 리눅스 기술

- C.Group
  - CPU, Memory, NetWork, Bandwith, HD, i/o 등 프로세스 그룹의 시스템 리소스 
  사용량을 관리
- 네임스페이스
  - 하나의 시스템에서 프로세스를 격리 시키는 가상화 기술